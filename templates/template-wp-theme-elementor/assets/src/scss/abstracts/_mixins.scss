@mixin cutByLine($line) {
  display: -webkit-box;
  -webkit-line-clamp: $line;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

@mixin placeholder($prop, $value) {
  &::-webkit-input-placeholder {
    /* Edge */
    #{$prop}: $value;
  }

  &:-ms-input-placeholder {
    /* Internet Explorer */
    #{$prop}: $value;
  }

  &::placeholder {
    #{$prop}: $value;
  }
}

@mixin inline-animation($duration) {
  $name: inline-#{unique-id()};

  @keyframes #{$name} {
    @content;
  }

  animation-name: $name;
  animation-duration: $duration;
}

@mixin fluid-type($min-font-size,
  $max-font-size,
  $min-vw: 280px,
  $max-vw: 1920px) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1==$u2 and $u1==$u3 and $u1==$u4 {
    & {
      font-size: $min-font-size;

      @media screen and (min-width: $min-vw) {
        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }

      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

@mixin fake-container($property, $container: 1140px, $container-wide: 1328px) {
  #{$property}: calc((100vw - $container-wide)/2);

  @media (max-width: 1366px) {
    #{$property}: calc((100vw - $container)/2);
  }

  @media (max-width: v.$tablet-down) {
    max-width: 100%;
    padding-inline: 24px;
  }

  @media (max-width: v.$mobile-down) {
    padding-inline: 16px;
  }
}


@mixin scrollbar($color, $background: #f4edf8, $border-radius: 10px, $width: 16px) {
  &::-webkit-scrollbar-track {
    width: $width;
    border-radius: $border-radius;
    background-color: $background;
    border: none;
    margin-right: $border-radius;
  }

  &::-webkit-scrollbar {
    width: $width;
    background-color: $background;
    margin-right: $border-radius;
    margin-top: $border-radius;
    border: none;
  }

  &::-webkit-scrollbar-thumb {
    border-radius: $border-radius;
    background-color: $color;
    border: none;
    background-clip: padding-box;
  }
}

@mixin flex-slice($n, $gap) {
  $percentage: math.percentage(math.div(1, $n));
  flex: 0 0 calc($percentage - ($gap * ($n - 1)));
}